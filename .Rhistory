ts <- replicate(B,{
x <- rnorm(n)
y <- rnorm(n)
tstat <- t.test(x , y ,var.equal = T)$stat
return(tstat)
})
ps = seq(1/(B+1), 1-1/(B+1),len = B)
qs <- qt(ps , df = 2*(n-1) )
qqplot(qs , ts , main = n)
abline(0,1)
}
B = 100
Ns <- seq(5,30,5)
mypar(3,2)
set.seed(1)
for ( n in Ns){
ts <- replicate(B,{
x <- rnorm(n)
y <- rnorm(n)
tstat <- t.test(x , y ,var.equal = T)$stat
return(tstat)
})
ps = seq(1/(B+1), 1-1/(B+1),len = B)
qs <- qt(ps , df = 2*(n-1) )
qqplot(qs , ts , main = n)
abline(0,1)
}
X =sample(c(-1,1), 15, replace=TRUE)
tstat <- sqrt(15)*mean(X) / sd(X)
ts <- replicate(B,{
X <- sample(c(-1,1), 15, replace = TRUE)
tstat <- sqrt(15)*mean(X) / sd(X)
return(tstat)
})
ps = seq(1/(B+1), 1-1/(B+1),len = B)
qs <- qt(ps , df = 2*(n-1) )
qqplot(qs , ts , main = n)
abline(0,1)
ts <- replicate(B,{
X <- sample(c(-1,1), 15, replace = TRUE)
tstat <- sqrt(15)*mean(X) / sd(X)
return(tstat)
})
ps = seq(1/(B+1), 1-1/(B+1),len = B)
qs <- qt(ps , df = 15 -1 )
qqplot(qs , ts , main = n)
abline(0,1)
set.seed(1)
N <- 15
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
ts <- replicate(B,{
X <- sample(c(-1,1), 1000, replace = TRUE)
tstat <- sqrt(1000)*mean(X) / sd(X)
return(tstat)
})
ps = seq(1/(B+1), 1-1/(B+1),len = B)
qs <- qt(ps , df = 1000 -1 )
qqplot(qs , ts , main = n)
abline(0,1)
dat=read.csv("femaleMiceWeights.csv")
library(dplyr)
control <- filter(dat,Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat,Diet=="hf") %>% select(Bodyweight) %>% unlist
obsdiff <- mean(treatment)-mean(control)
dat=read.csv("femaleMiceWeights.csv")
library(dplyr)
control <- filter(dat,Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat,Diet=="hf") %>% select(Bodyweight) %>% unlist
obsdiff <- mean(treatment)-mean(control)
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment))
newcontrols <- all[1:N]
newtreatments <- all[(N+1):(2*N)]
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v=obsdiff, col="red", lwd=2)
dat=read.csv("femaleMiceWeights.csv")
mypar(1,1)
library(dplyr)
control <- filter(dat,Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat,Diet=="hf") %>% select(Bodyweight) %>% unlist
obsdiff <- mean(treatment)-mean(control)
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment))
newcontrols <- all[1:N]
newtreatments <- all[(N+1):(2*N)]
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v=obsdiff, col="red", lwd=2)
dat=read.csv("femaleMiceWeights.csv")
mypar(1,1)
library(dplyr)
control <- filter(dat,Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat,Diet=="hf") %>% select(Bodyweight) %>% unlist
obsdiff <- mean(treatment)-mean(control)
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment)) ;all
newcontrols <- all[1:N] ; newcontrols
newtreatments <- all[(N+1):(2*N)] ; newtreatments
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v=obsdiff, col="red", lwd=2)
all
all <- sample(c(control , treatment)) ; all
newcontrols <- all[1:N] ; newcontrols
newtreatments <- all[(N+1):(2*N)] ; newtreatments
View(dat)
(sum(abs(avgdiff) > abs(obsdiff)) + 1) / (length(avgdiff) + 1)
mypar(1,1)
library(dplyr)
control <- filter(dat,Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat,Diet=="hf") %>% select(Bodyweight) %>% unlist
obsdiff <- mean(treatment)-mean(control)
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment)) ;all
newcontrols <- all[1:N] ; newcontrols
newtreatments <- all[(N+1):(2*N)] ; newtreatments
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v = obsdiff, col = "red", lwd = 2)
(sum(abs(avgdiff) > abs(obsdiff)) + 1) / (length(avgdiff) + 1)
mean(avgdiff > obsdiff)
mean(abs(avgdiff) > obsdiff)
dat=read.csv("femaleMiceWeights.csv")
library(dplyr)
control <- filter(dat,Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat,Diet=="hf") %>% select(Bodyweight) %>% unlist
obsdiff <- mean(treatment)-mean(control)
N <- 12
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment))
newcontrols <- all[1:N]
newtreatments <- all[(N+1):(2*N)]
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v=obsdiff, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(avgdiff) > abs(obsdiff)) + 1) / (length(avgdiff) + 1)
mean(abs(avgdiff) > obsdiff)
N <- 5
control <- sample(control,N)
treatment <- sample(treatment,N)
obsdiff <- mean(treatment)- mean(control)
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment))
newcontrols <- all[1:N]
newtreatments <- all[(N+1):(2*N)]
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v=obsdiff, col="red", lwd=2)
mean(abs(avgdiff) > obsdiff)
N <- 5
control <- sample(control,N)
treatment <- sample(treatment,N)
obsdiff <- mean(treatment)- mean(control)
avgdiff <- replicate(1000, {
all <- sample(c(control,treatment))
newcontrols <- all[1:N]
newtreatments <- all[(N+1):(2*N)]
return(mean(newtreatments) - mean(newcontrols))
})
hist(avgdiff)
abline(v = obsdiff, col = "red", lwd = 2)
mean(abs(avgdiff) > obsdiff)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke == 0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke == 1) %>% select(bwt) %>% unlist
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obsdiff <- mean(smokers) - mean(nonsmokers)
avgdiffs <- replicate(1000 ,{
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
avgdiff <- mean(smokersstar)-mean(nonsmokersstar)
return(avgdiff)
})
hist(avgdiffs)
abline(v = obsdiff , col = 2 , lwd = 3)
mean(abs(avgdiffs) > obsdiff )
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obsdiff <- mean(smokers) - mean(nonsmokers)
avgdiffs <- replicate(1000 ,{
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
avgdiff <- mean(smokersstar)-mean(nonsmokersstar)
return(avgdiff)
})
hist(avgdiffs)
abline(v = obsdiff , col = 2 , lwd = 3)
pvalue <-mean(abs(avgdiffs) > abs(obsdiff) )
pvalue <- mean(abs(avgdiffs) > abs(obsdiff)) ; pvalue
avgdiffs <- replicate(1000 ,{
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
avgdiff <- median(smokersstar) - median(nonsmokersstar)
return(avgdiff)
})
hist(avgdiffs)
abline(v = obsdiff , col = 2 , lwd = 3)
pvalue <- mean(abs(avgdiffs) > abs(obsdiff)) ; pvalue
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obsdiff <- median(smokers) - median(nonsmokers)
avgdiffs <- replicate(1000 ,{
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
avgdiff <- mean(smokersstar) - mean(nonsmokersstar)
return(avgdiff)
})
hist(avgdiffs)
abline(v = obsdiff , col = 2 , lwd = 3)
pvalue <- mean(abs(avgdiffs) > abs(obsdiff)) ; pvalue
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obsdiff <- median(smokers) - median(nonsmokers)
avgdiffs <- replicate(1000 ,{
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
avgdiff <- median(smokersstar) - median(nonsmokersstar)
return(avgdiff)
})
hist(avgdiffs)
abline(v = obsdiff , col = 2 , lwd = 3)
pvalue <- mean(abs(avgdiffs) > abs(obsdiff)) ; pvalue
pvalue <- median(abs(avgdiffs) > abs(obsdiff)) ; pvalue
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obsdiff <- median(smokers) - median(nonsmokers)
avgdiffs <- replicate(1000 ,{
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
avgdiff <- median(smokersstar) - median(nonsmokersstar)
return(avgdiff)
})
hist(avgdiffs)
abline(v = obsdiff , col = 2 , lwd = 3)
pvalue <- mean(abs(avgdiffs) > abs(obsdiff)) ; pvalue
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
median(smokersstar)-median(nonsmokersstar)
})
( sum( abs(null) >= abs(obs)) +1 ) / ( length(null)+1 )
( sum( abs(avgdiffs) >= abs(obsdiff)) +1 ) / ( length(avgdiffs)+1 )
##########################################################################
#Association Tests Exercises
d = read.csv("assoctest.csv")
View(d)
table(chisq.test(d))
##########################################################################
#Association Tests Exercises
tab <- matrix(c(3,1,1,3),2,2) ; tab
rownames(tab)<-c("Poured Before","Poured After")
colnames(tab)<-c("Guessed before","Guessed after")
tab
fisher.test(tab , alternative = "greater")
disease=factor(c(rep(0,180),rep(1,20),rep(0,40),rep(1,10)),
labels=c("control","cases"))
disease=factor(c(rep(0,180),rep(1,20),rep(0,40),rep(1,10)), labels=c("control","cases"))
disease
disease <- factor(c(rep(1,180))) ; disease
disease <- factor(c(rep(0,180),rep(1,20))) ; disease
disease <- factor(c(rep(0,180),rep(1,20),rep(0,40),rep(1,20))) ; disease
disease <- factor(c(rep(0,180),rep(1,20),rep(0,40),rep(1,20)),labels = c("control" , "cases")) ; disease
genotype <- factor(c(rep("AA/Aa",200) , rep("aa",50)) , labels = c("AA/Aa" , "aa")) ; genotype
dat <- data.frame(disease , genotype) ; dat
disease <- factor(c(rep(0,180) , rep(1,20) , rep(0,40) , rep(1,10)) , labels = c("control","cases")) ; disease
genotype <- factor(c(rep("AA/Aa",200) , rep("aa",50)) , labels = c("AA/Aa" , "aa")) ; genotype
dat <- data.frame(disease , genotype) ; dat
shuffle <- dat[sample(nrow(dat) , )]
shuffle <- dat[sample(nrow(dat)) , ]
disease <- factor(c(rep(0,180) , rep(1,20) , rep(0,40) , rep(1,10)) , labels = c("control","cases")) ; disease
genotype <- factor(c(rep("AA/Aa",200) , rep("aa",50)) , labels = c("AA/Aa" , "aa")) ; genotype
dat <- data.frame(disease , genotype) ; dat
shuffle <- dat[sample(nrow(dat)) , ] ; shuffle
disease=factor(c(rep(0,180),rep(1,20),rep(0,40),rep(1,10)),
labels=c("control","cases"))
genotype=factor(c(rep("AA/Aa",200),rep("aa",50)),
levels=c("AA/Aa","aa"))
dat <- data.frame(disease, genotype)
dat <- dat[sample(nrow(dat)),] #shuffle them up
dat
table(genotype)
table(disease)
tab <- table(disease , genotype) ; tab
tab <- table(genotype , disease) ; tab
OR <- (tab[2,2]/tab[2,1]) / (tab[1,2]/tab[1,1]) ; OR
pvalue <- mean(disease == "cases") ; pvalue
30/220
20/180 + 10/40
30/260
30/250
c(1-p,p)* sum(genotype == "AA/Aa")
p <- mean(disease == "cases") ; p  ##Probability of disease (30/250)
expected <- rbind(c(1-p,p)* sum(genotype == "AA/Aa") , c(1-p,p)*sum(genotype == "aa"))
c(1-p,p)* sum(genotype == "AA/Aa")
c(1-p,p)*(genotype == "AA/Aa")
c(1-p,p)*sum(genotype == "AA/Aa")
c(1-p,p) * sum(genotype == "aa")
dimnames(expected) <- dimnames(tab)
expected
chisq.test(tab)
chisq.test(tab)
chisq.test(tab)
tab <- tab*10
chisq.test(tab)
fit <- glm(disease~genotype , family = "binomial" , data = dat) ; fit  ##generalised linear model
coeftab <- summary(fit)$coef ;coeftab
coeftab[2,1]
coeftab[2,2]
c(-2 , 2)coeftab[2,2]
c(-2,2) * coeftab[2,2]
CI <- coeftab[2,1] + c(-1.96,1.96) * coeftab[2,2]
CI <- coeftab[2,1] + c(-1.96,1.96) * coeftab[2,2] ; CI
exp(ci)
ci <- coeftab[2,1] + c(-1.96,1.96) * coeftab[2,2] ; ci
exp(ci)
disease <- factor(c(rep(0,180) , rep(1,20) , rep(0,40) , rep(1,10)) , labels = c("control","cases")) ; disease
genotype <- factor(c(rep("AA/Aa",200) , rep("aa",50)) , labels = c("AA/Aa" , "aa")) ; genotype
dat <- data.frame(disease , genotype) ; dat
shuffle <- dat[sample(nrow(dat)) , ] ; shuffle   ##Shuffle them up
table(genotype)
table(d == "allele")
table(d == allele)
table(d == "allele")
table(d == "case")
table(d$allele , d$case)
chisq.test(tab)
d = read.csv("assoctest.csv")
tab <- table(d$allele , d$case)
chisq.test(tab)
#Association Tests Exercises #2
fisher.test(tab)
###########################################################################
##ScatterPlot
library(UsingR)
View(father.son)
plot(x , y)
library(UsingR)
View(father.son)
x <- father.son$fheight
y <- father.son$sheight
plot(x , y)
split(y , round(x))
boxplot(split(y , round(x)))
mean(y[round(x) == 72])
(y[round(x*4) / 4)]
means <- sapply(Y , round(X*4)/4)
means <- sapply(Y , round(X*4)/4 , mean)
means <- sapply(Y , round(X*4)/4 , mean) ;means
means <- tapply(Y , round(X*4)/4 , mean) ;means
X <- (x - mean(x)) / sd(x)
Y <- (y - mean(y)) / sd(y)
means <- tapply(Y , round(X*4)/4 , mean) ;means
means <- sapply(Y , round(X*4)/4 , mean) ;means
means <- tapply(Y , round(X*4)/4 , mean) ;means
means <- tapply(Y , round(X) , mean) ;means
means <- tapply(Y , round(X*4) / 4 , mean) ;means
names(means)
fatherheights <- as.numeric(names(means))
fatherheights <- as.numeric(names(means)) ; fatherheights
plot(fatherheights , means)
abline(0 , cor(X,Y))
set.seed(1)
a <- rnorm(100)
b <- rnorm(100)
plot(a,b)
set.seed(1)
a <- rnorm(100) ; a[1] = 25
b <- rnorm(100) ; b[1] = 26
plot(a,b)
##Scatterplot Exercises #1
library(dplyr)
data(nym.2002, package="UsingR")
library(UsingR)
dat <- data(nym.2002)
View(dat)
dat <- nym.2002
View(dat)
View(dat)
males <- filter(dat , gender == "Male") %>% select(age) %>% unlist ; males
females <- filter(dat , gender == "Female") %>% select(age) %>% unlist
library(dplyr)
library(UsingR)
dat <- nym.2002
View(dat)
males <- filter(dat , gender == "Male") %>% select(age) %>% unlist ; males
females <- filter(dat , gender == "Female") %>% select(age) %>% unlist
male.age <- males$age
male.time <- males$time
males <- filter(dat , gender == "Male") %>% dplyr::select(age) %>% unlist ; males
females <- filter(dat , gender == "Female") %>% dplyr::select(age) %>% unlist
male.age <- males$age
males <- filter(dat , gender == "Male") %>% dplyr::select(age) ; males
males <- filter(dat , gender == "Male") %>% dplyr::select(age , time) ; males
male.age <- males$age
male.time <- males$time
cor(male.age , male.time)
females <- filter(dat , gender == "Female") %>% dplyr::select(age , time)
##Scatterplot Exercises #2
female.age <- females$age
female.age <- females$age
female.time <- females$time
cor(female.age , female.time)
##Scatterplot Exercises #3
library(rafalib)
plot(female.age , female.time)
plot(male.age , male.time)
mypar(2,2)
plot(female.age , female.time)
plot(male.age , male.time)
group.female <- floor(female.age / 5)*5 ; group.female
boxplot(group.female , female.time)
boxplot(female.time , group.female)
boxplot(female.time ~ group.female)
group.male <- floor(male.age / 5)*5 ;group.male
boxplot(male.time ~ group.male)
library(rafalib)
mypar(2,2)
plot(female.age , female.time)
plot(male.age , male.time)
group.female <- floor(female.age / 5)*5 ; group.female
boxplot(female.time ~ group.female)
group.male <- floor(male.age / 5)*5 ;group.male
boxplot(male.time ~ group.male)
##Symmetry of Log Ratios Exercises #1
time = sort(nym.2002$time) ; time
median(time)
floor(time)
##Symmetry of Log Ratios Exercises #1
time = sort(nym.2002$time) ; time
median(time)
time[1]
time[1] / median(time)
min(time)
min(time) / median(time)
##Symmetry of Log Ratios Exercises #2
max(time) / median(time)
##Symmetry of Log Ratios Exercises #3
plot(time/median(time), ylim=c(1/4,4))
abline(h=c(1/2,1,2))
mypar(2,1)
plot(time/median(time), ylim=c(1/4,4))
abline(h=c(1/2,1,2))
plot(log2(time/median(time)),ylim=c(-2,2))
abline(h=-1:1)
plot(log10(time/median(time)),ylim=c(-2,2))
abline(h=-1:1)
plot(log2(time/median(time)),ylim=c(-2,2))
mypar(2,1)
plot(time/median(time), ylim=c(1/4,4))
abline(h=c(1/2,1,2))
plot(log2(time/median(time)),ylim=c(-2,2))
abline(h=-1:1)
plot(log2(time/median(time)),ylim=c(-2,2)) ## Using log
mypar(2,1)
plot(time/median(time), ylim=c(1/4,4))  ##Without using log
abline(h=c(1/2,1,2))
plot(log2(time/median(time)),ylim=c(-2,2)) ## Using log
abline(h=-1:1)
#######################################################
#Median, MAD, and Spearman Correlation Exercises #1
data <- ChickWeight
View(dat)
View(data)
